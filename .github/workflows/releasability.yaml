# Verify releasability of artifacts without upload/push
name: Releasability

on:
  push:
    branches: [ 'main', 'master' ]

  pull_request:
    branches: [ 'main', 'master' ]

jobs:

  artifacts:
    name: Verify Create artifacts (no upload)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: GoReleaser Snapshot
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # make artifacts available for inspection
      # https://docs.github.com/en/actions/guides/storing-workflow-data-as-artifacts
      - name: Archive run artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            dist/vsphere-alarm-server*x86_64*.tar.gz
            dist/checksums.txt
          retention-days: 1

  release:
    needs: artifacts
    name: Verify Release ko artifact (no upload)
    runs-on: ubuntu-latest
    env:
      GOPATH: ${{ github.workspace }}
      GO111MODULE: on
      KO_DOCKER_REPO: docker.io/embano1

    steps:
      - name: Set up Go 1.16.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x

      - name: Set up ko
        env:
          KO_VERSION: 0.8.1
        run: |
          curl -L https://github.com/google/ko/releases/download/v${KO_VERSION}/ko_${KO_VERSION}_Linux_x86_64.tar.gz | tar xzf - ko
          chmod +x ./ko
          sudo mv ko /usr/local/bin

      - name: Check out code onto GOPATH
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          path: ./src/github.com/${{ github.repository }}

      - name: Build images
        working-directory: ./src/github.com/${{ github.repository }}
        run: |
          export SHA8=$(echo -n $GITHUB_SHA | cut -c -8)
          GOFLAGS="-ldflags=-X=main.GitSHA=$SHA8 -mod=vendor" ko resolve --push=false --tags $SHA8 -BRf config/