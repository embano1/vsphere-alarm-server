# Verify releasability of artifacts without upload/push
name: Releasability

on:
  push:
    branches: [ 'main', 'master' ]

  pull_request:
    branches: [ 'main', 'master' ]

jobs:

  artifacts:
    name: Verify Create artifacts (no upload)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: GoReleaser Snapshot
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # make artifacts available for inspection
      # https://docs.github.com/en/actions/guides/storing-workflow-data-as-artifacts
      - name: Archive run artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            dist/vsphere-alarm-server*x86_64*.tar.gz
            dist/checksums.txt
          retention-days: 1

  release:
    name: Verify Release ko artifact (no upload)
    runs-on: ubuntu-latest
    env:
      KO_DOCKER_REPO: us.gcr.io/daisy-284300/veba # vsphere-alarm-server will be added by ko

    steps:
      - name: Setup ko
        uses: imjasonh/setup-ko@2c3450ca27f6e6f2b02e72a40f2163c281a1f675 # v0.4 tag, will install latest ko version

      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Check out code onto GOPATH
        uses: actions/checkout@v2

      - name: Login to GCP
        uses: google-github-actions/setup-gcloud@877d4953d2c70a0ba7ef3290ae968eb24af233bb
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}

      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      - name: Get short COMMIT and TAG
        run: |
          echo "KO_COMMIT=$(echo -n $GITHUB_SHA | cut -c -8)" >> $GITHUB_ENV
          echo "KO_TAG=$(basename "${{ github.ref }}")" >> $GITHUB_ENV

      - name: Build image (no push)
        run: |
          # build, push and create release YAML
          ko resolve --push=false --tags ${KO_TAG},${KO_COMMIT},latest -BRf config/ > release.yaml

      - name: Archive run artifacts
        uses: actions/upload-artifact@v2
        with:
          name: release
          path: |
            release.yaml
          retention-days: 1