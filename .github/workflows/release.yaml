name: Release

on:
  # release will only be created when ref is a tag starting with "v"
  push:
    tags:
      - 'v*'

jobs:

  artifacts:
    name: Create artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  images:
    needs: artifacts
    name: Release ko artifact
    runs-on: ubuntu-latest
    env:
      KO_DOCKER_REPO: us.gcr.io/daisy-284300/veba # vsphere-alarm-server will be added by ko

    steps:
      - name: Setup ko
        uses: imjasonh/setup-ko@2c3450ca27f6e6f2b02e72a40f2163c281a1f675 # v0.4 tag, will install latest ko version

      - name: Set up Go 1.17.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Check out code onto GOPATH
        uses: actions/checkout@v2

      - name: Login to GCP
        uses: google-github-actions/setup-gcloud@877d4953d2c70a0ba7ef3290ae968eb24af233bb
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_email: ${{ secrets.GCP_EMAIL }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS }}

      - name: Configure Docker
        run: gcloud auth configure-docker --quiet

      - name: Get short COMMIT and TAG
        run: |
          echo "KO_COMMIT=$(echo -n $GITHUB_SHA | cut -c -8)" >> $GITHUB_ENV
          echo "KO_TAG=$(basename "${{ github.ref }}")" >> $GITHUB_ENV

      - name: Get Release URL
        id: get_release_url
        uses: bruceadams/get-release@v1.2.0
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Build and Publish images, Produce release artifact.
        run: |
          # build, push and create release YAML
          ko resolve --tags ${KO_TAG},${KO_COMMIT},latest -BRf config/ > release.yaml

      - name: Upload Release Assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_url.outputs.upload_url }}
          asset_path: ./release.yaml
          asset_name: release.yaml
          asset_content_type: text/plain
